# Configuration Superset avec image personnalisée
image:
  repository: superset-custom
  tag: "3.0.0"
  pullPolicy: Never

# Configuration du service pour Minikube
service:
  type: NodePort
  port: 8088
  nodePort:
    http: 30088
  annotations: {}

# Configuration des réplicas
replicaCount: 1

# Variables d'environnement
# envFromSecret: superset-env-secret  # Commenté car le secret n'existe pas
envFromSecrets: []

# Configuration de la base de données interne
postgresql:
  enabled: true  # PostgreSQL intégré pour Superset
  auth:
    postgresPassword: "superset123"
    username: "superset"
    password: "superset123"
    database: "superset"
  primary:
    persistence:
      enabled: true
      size: 8Gi

# Configuration Redis (pour le cache)
redis:
  enabled: true
  auth:
    enabled: false

# Configuration de l'initialisation avec drivers
init:
  adminUser:
    username: admin
    firstname: Admin
    lastname: User
    email: admin@superset.com
    password: admin
  createAdmin: true

# Configuration des workers
supersetWorker:
  replicaCount: 1

# Configuration du web server
supersetWebserver:
  replicaCount: 1

# Configuration du scheduler Celery
supersetCeleryBeat:
  enabled: true

# Ressources
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Configuration des volumes
persistence:
  enabled: false

# Configuration personnalisée
configOverrides:
  superset_config.py: |
    import os

    # Configuration de base
    SECRET_KEY = os.environ.get('SUPERSET_SECRET_KEY', 'your-secret-key-change-in-production')

    # Configuration de la base de données Superset (PostgreSQL intégré)
    SQLALCHEMY_DATABASE_URI = 'postgresql://superset:superset123@superset-postgresql:5432/superset'

    # Configuration des drivers de base de données
    SQLALCHEMY_TRACK_MODIFICATIONS = False

    # Configuration Redis pour le cache (si activé)
    CACHE_CONFIG = {
        'CACHE_TYPE': 'RedisCache',
        'CACHE_DEFAULT_TIMEOUT': 300,
        'CACHE_KEY_PREFIX': 'superset_',
        'CACHE_REDIS_HOST': 'superset-redis-headless',
        'CACHE_REDIS_PORT': 6379,
        'CACHE_REDIS_DB': 1,
        'CACHE_REDIS_URL': 'redis://superset-redis-headless:6379/1'
    }

    # Configuration Celery
    CELERY_CONFIG = {
        'broker_url': 'redis://superset-redis-headless:6379/0',
        'imports': ['superset.sql_lab'],
        'result_backend': 'redis://superset-redis-headless:6379/0',
        'worker_prefetch_multiplier': 10,
        'task_acks_late': True,
    }

# Configuration du secret pour les variables d'environnement
extraSecretEnv:
  SUPERSET_SECRET_KEY: your-secret-key-change-in-production

# Configuration des sondes de santé
healthcheck:
  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 60
    timeoutSeconds: 60
    failureThreshold: 3
    periodSeconds: 60
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 60
    failureThreshold: 3
    periodSeconds: 15
    successThreshold: 1

# Configuration Ingress (désactivé par défaut)
ingress:
  enabled: false
